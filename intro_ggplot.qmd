---
title: "ggplot"
format: html
editor: visual
---

```{r}
#| label: setup
#| echo: false
#| output: false
#| message: false
library(tidyverse)
library(ggpubr)
library(nycflights13)
```

## Intro ggplot

Tomt ggplot

```{r}
ggplot(data = mtcars)
```

ggplot med variabler

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = disp, y = mpg)
  ) + 
  geom_point() + 
  geom_smooth(level = 0.99) + 
  geom_smooth(method = "lm", 
              colour = "red", 
              se = FALSE)
```

```{r}
gg1 <-   ggplot(data = mtcars, mapping = aes(x = disp, y = mpg)) +
  geom_point()

```

```{r}
gg2 <-   ggplot(data = mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg))
```

```{r}
ggarrange(gg1, gg2,
          labels = c(
            "mapping = aes in ggplot", 
            "mapping = aes in geom_*"),
          nrow = 2)
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = disp, y = mpg,
                colour = factor(am),
                  shape = factor(cyl), 
                size = qsec,
                alpha = wt)
  ) + 
  geom_point()
```

```{r}
ggplot(data = mtcars, mapping= aes(x = disp, y = mpg, color = factor(cyl), shape = factor(am), size = hp)) + geom_point()
```

```{r}
ggplot() +
  geom_point(data = mtcars,
             mapping = aes(
               x = disp, 
               y = mpg, 
               colour = factor(cyl), 
               alpha = 3.6*(0.25*1609.347)/qsec,
                shape = factor(ifelse(am, "Man", "Aut"))),  
              size = 4
             ) +
  labs(
    colour = "cyl", 
    alpha = "speed\n(km/h)", 
    shape = "trans-\nmission")
```

```{r}
ggplot() +
  geom_point(
    data = mtcars,
    mapping = aes(
      x = disp,
      y = mpg, 
      colour = factor(cyl), 
      size = 3.6*(0.25*1609.347)/qsec, 
      shape = factor(
        # Note codeing am
        # 0 automatic, 1 manual
        ifelse(
          am, 
          "Aut", 
          "Man"
          )
        )
      )
    ) +
  labs(
    colour = "cyl", 
    size = "speed\n(km/h)", 
    shape = "trans-\nmission"
    ) +
  geom_smooth(
    data = mtcars, 
    mapping = aes(x = disp, y = mpg), 
    span = 0.5, 
    level = 0.99,
    ) + geom_smooth(
    data = mtcars, 
    mapping = aes(x = disp, y = mpg), 
    span = 0.5, 
    level = 0.95,
    ) + geom_smooth(
      data = mtcars, 
      mapping = aes(x = disp, y = mpg), 
      method = lm, 
      se = FALSE, 
      color = "red" 
      )
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(
    x = disp, 
    y = mpg
    )
  ) +
  geom_point() +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  # robust lm
  geom_smooth(
    method = MASS::rlm, 
    colour = 'Red', 
    se = FALSE
    )
```

```{r}
## create tibble from scratch
df_mean <-   tibble(
  cyl = c("avg. car 4 cyl.", "avg. car 6 cyl.", "avg. car 8 cyl."), 
  mpg = c(22.66, 17.74, 15.10), 
  disp = c(105.14, 183.31, 353.10)
  )

```

```{r}
df_mean
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = disp, y = mpg)
  ) +
  geom_point(
    mapping = aes(colour = factor(cyl))
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  geom_smooth(
    method = MASS::rlm, 
    colour = 'Red', 
    se = FALSE
    ) +
  geom_point(
    data = df_mean, 
    mapping = aes(x = disp, y = mpg), 
    colour = "black", 
    size = 3
    ) +
  geom_text(
    data = df_mean, 
    mapping = aes(x = disp, y = mpg, label = cyl), 
    colour = "black", 
    vjust = 1.5
    )
```

```{r}
#new dataframe to use for the grey points
hp_acc <- data.frame(
  hp = mtcars$hp, 
  acc = 1609.347/(2*mtcars$qsec^2)
  )

ggplot(
  data = mtcars, 
  mapping = aes(x = hp, y = 1609.347/(2*qsec^2))
  ) +
  geom_point(
    data = hp_acc, 
    mapping = aes(x = hp, y = acc), colour = "grey80"
    ) +
  facet_wrap(
    ~cut_number(
      wt, 
      n =3 , 
      labels = c("Light", "Medium", "Heavy")
      )
    ) +
  geom_point(
    mapping = aes(colour = cut_number(
      wt, 
      n = 3, 
      labels = c("Light", "Medium", "Heavy")
      )
      ),
    show.legend = TRUE
    ) +
  geom_smooth(mapping = aes(colour = cut_number(
      wt, 
      n = 3, 
      labels = c("Light", "Medium", "Heavy")
      )
      ),
    method = "lm", 
    se = FALSE
    ) +
  labs(
    y = "Mean acceleration (m/s^2)", 
    colour = "Weight"
    )
```

```{r}
ggplot(
  data = mtcars, 
  mapping = aes(x = hp, y = 1609.347/(2*qsec^2))
  ) +
  geom_point(
    data = hp_acc, 
    mapping = aes(x = hp, y = acc), 
    colour = "grey80"
    ) +
  facet_grid(
    factor(cyl)~cut_number(
      wt, 
      n =3 , 
      labels = c("Light", "Medium", "Heavy"))
    ) +
  geom_point(
    mapping = aes(
      colour = cut_number(
        wt, 
        n = 3, 
        labels = c("Light", "Medium", "Heavy")
        )
      ),
    show.legend = FALSE
    ) +
  geom_smooth(
    method = "lm", 
    se = FALSE
    ) +
  labs(
    y = "Mean acceleration", 
    colour = "Weight"
    )
```

## \~ = ctrl+alt+\^+mellomrom

```{r}
X10540 <- read_excel("10540_20230908-104555.xlsx", 
    skip = 2)
```

```{r}
View(X10540)
```

csv_fil

```{r}
X10540 <- read_delim(
  file = "10540_20230908-114924.csv",
    delim = ";", 
    escape_double = FALSE, 
    locale = locale(
      date_names = "nb", 
        encoding = "ISO-8859-1"
      ), 
    trim_ws = TRUE, 
    skip = 1, 
    show_col_types = FALSE
    )
```

se csv fil:

```{r}
View(X10540)
```

PxWebApiData

```{r}


metadata_10540_en <- ApiData(
  "http://data.ssb.no/api/v0/en/table/10540",
  returnMetaFrames = TRUE
  )
```

```{r}
metadata_10540_no <- ApiData(
  "https://data.ssb.no/api/v0/no/table/13891/",
  returnMetaFrames = TRUE
  )
```

```{r}
unemp99to02 <- ApiData12(
  "http://data.ssb.no/api/v0/en/table/10540",
  # Have not been able to specify more complex regions
  Region = list("11*"),
  Tid = c(paste(
    rep(1999:2002, each = 12), 
    "M",
    sprintf("%02d", 1:12), 
    sep = "")
    )
  )
```

```{r}
paste(
    rep(1999:2002, each = 12), 
    "M",
    sprintf("%02d", 1:12), 
    sep = "")

```

```{r}
rep(1999:2002, each = 12)
```

## Transforming data

```{r}
set.seed(1234)
res_mean_rnorm_3dig_string <-
  rnorm(n = 10, mean = 0, sd = 1) %>%
  mean() %>%
  round(digits = 3) %>%
  # The dot '.' is to show where the content of the pipe should be put
  paste("Result:", .)
res_mean_rnorm_3dig_string
```

```{r}
set.seed(1234)
res_mean_rnorm_3dig_string <- rnorm(
  n = 10,
  mean = 0,
  sd = 1
) %>%
  mean() %>%
  round(digits = 3) %>% 
  paste("Result:", .) 
res_mean_rnorm_3dig_string
```

```{r}
# what size is it
dim(flights)
```
